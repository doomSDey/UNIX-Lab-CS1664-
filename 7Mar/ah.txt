#include<stdio.h>
#include<ctype.h>
#include<string.h>
 
void Find_First(char[], char);
void Find_Follow(char[], char);
void Array_Manipulation(char[], char);
 
int limit;
char production[25][25];
 
int main()
{
      char option; 
      char ch,olch=' ';
      char array[25];
      int count,counter;
      printf("\nEnter Total Number of Productions: ");
      scanf("%d", &limit);
      for(count = 0; count < limit; count++)
      {
            printf("Value of Production Number [%d]: ", count + 1);
            scanf("%s", production[count]);
      }
   
	for(counter = limit-1; counter >= 0; counter--)
	{
		ch=production[counter][0];
		if(ch!=olch)
		{
		  Find_First(array, ch);
		  printf("\nFirst Set of %c:\t{", ch);
		  for(count = 0; array[count] != '\0'; count++)
		  {        
			if(count!=0)
				printf(",");
		        printf("%c", array[count]);
		  }
		  printf("}");
		olch=ch;
		}
	}
	olch=' ';
	for(counter = 0; counter < limit; counter++)
	{
		ch=production[counter][0];
		if(ch!=olch)
		{
		  Find_Follow(array, ch);
		  printf("\nFollow Set of %c: {", ch);
		  for(count = 0; array[count] != '\0'; count++)
		  {        
			if(count!=0)
				printf(",");
		        printf("%c", array[count]);
		  }
		  printf("}");
		olch=ch;
		}
	}
	
	printf("\n\n");
      return 0;
}

void Find_Follow(char* array, char ch)
{
	int count,flag=0,i,j;
	char temporary_result[20];
	temporary_result[0] = '\0';
      	array[0] = '\0';
	
	for(count = 0; count < limit; count++)
      	{
      		//printf("%c",production[count][0]);
      		flag=0;
      		for(i=2;i<strlen(production[count]);i++)
      		{
      			if(production[count][i]==ch)
      			{
      				flag=0;
      				if(production[count][i+1]!='\0')
      				{
	      				Find_First(temporary_result,production[count][i+1]);
	      				for(j=0;j<strlen(temporary_result);j++)
	      				{
	      					if(temporary_result[j]!='#')
	      					{
	      						Array_Manipulation(array, temporary_result[j]);
	      					}
	      					else
	      					{
	      						flag=1;
	      					}
	      					
	      				}
	      			}
	      			
	      			if((production[count][i+1]=='\0' || flag==1) && production[count][0]!=ch)
	      			{
	      				Find_Follow(temporary_result, production[count][0]);
	      				for(j=0;j<strlen(temporary_result);j++)
	      				{
	  					Array_Manipulation(array, temporary_result[j]);
	      				}
	      			}
      				break;
      			}
      			
      		}
      		
      	}
      	
      	if(ch==production[0][0])
	{
		Array_Manipulation(array, '$');
	}
         
}
 
void Find_First(char* array, char ch)
{
      int count, j, k;
      char temporary_result[20];
      int x;
      temporary_result[0] = '\0';
      array[0] = '\0';
      if(!(isupper(ch)))
      {
            Array_Manipulation(array, ch);
            return ;
      }
      for(count = 0; count < limit; count++)
      {
            if(production[count][0] == ch)
            {
                  if(production[count][2] == '#') 
                  {
                        Array_Manipulation(array, '#');
                  }
                  else
                  {
                        j = 2;
                        while(production[count][j] != '\0')
                        {
                              x = 0;
                              Find_First(temporary_result, production[count][j]);
                              for(k = 0; temporary_result[k] != '\0'; k++)
                              {
                                    Array_Manipulation(array,temporary_result[k]);
                              }
                              for(k = 0; temporary_result[k] != '\0'; k++)
                              {
                                    if(temporary_result[k] == '#')
                                    {
                                          x = 1;
                                          break;
                                    }
                              }
                              if(!x)
                              {
                                    break;
                              }
                              j++;
                        }
                  }     
            }
      }
      return;
}
 
void Array_Manipulation(char array[], char value)
{
      int temp;
      for(temp = 0; array[temp] != '\0'; temp++)
      {
            if(array[temp] == value)
            {
                  return;
            }
      }
      array[temp] = value;
      array[temp + 1] = '\0';
}
